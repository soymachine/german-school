---
interface Props {
	step: string,
    width?:number,
    isSpeech?:boolean,
    fontSize?:number,
    hasText?:boolean,
    textCorrection?:number,
}

let { step, width = 150, isSpeech = false, fontSize = 22, hasText = true, textCorrection = 20 } = Astro.props;

const height = width * 1.33333
---
<div id=`my-avatar-${step}` class="my-avatar-image">
    <img class="my-avatar-body-part" id="my-avatar-hair-back-preview" src="./imgs/avatar/parts/hair-style-2-back-black.svg">
    <img class="my-avatar-body-part" class:list={[{ "my-avatar-hide": isSpeech }]} id="my-avatar-base-bg-preview" src="./imgs/avatar/parts/base-bg.png">
    <img class="my-avatar-body-part" class:list={[{ "avatar-circle-mask": !isSpeech }]} id="my-avatar-body-preview" src="./imgs/avatar/parts/body-1.svg">
    <img class="my-avatar-body-part" class:list={[{ "my-avatar-hide": isSpeech }]} id="my-avatar-base-line-preview" src="./imgs/avatar/parts/base-line.png">
    <img class="my-avatar-body-part" id="my-avatar-neck-preview" src="./imgs/avatar/parts/neck-1.svg">
    <img class="my-avatar-body-part" id="my-avatar-head-preview" src="./imgs/avatar/parts/skin-1.svg">
    <img class="my-avatar-body-part" id="my-avatar-eyebrows-preview" src="./imgs/avatar/parts/eyebrows-skin-1.svg">
    <div class="my-avatar-body-part" id="my-avatar-eyes-preview" src="./imgs/avatar/parts/eyes.svg">
        <img id="my-avatar-eyes-image" src="./imgs/avatar/parts/eyes.svg">
    </div>
    <img class="my-avatar-body-part" id="my-avatar-mouth-preview" src="./imgs/avatar/parts/mouth-skin-1.svg">
    <img class="my-avatar-body-part" id="my-avatar-nose-preview" src="./imgs/avatar/parts/nose-skin-1.svg">
    
    <img class="my-avatar-body-part my-avatar-body-extra" id="my-avatar-glasses-preview" src="./imgs/avatar/parts/glasses.svg">
    <img class="my-avatar-body-part my-avatar-body-extra" id="my-avatar-moustache-preview" src="./imgs/avatar/parts/moustache.png">
    <img class="my-avatar-body-part my-avatar-body-extra" id="my-avatar-beard-preview" src="./imgs/avatar/parts/beard.png">
    <img class="my-avatar-body-part" id="my-avatar-hair-preview" src="./imgs/avatar/parts/hair-style-11-black.svg">
</div>
{
    hasText && (
        <div class="user-name" id=`my-avatar-name-${step}`>Dani</div>        
    )
}

<script define:vars={{ width, height, step, fontSize, hasText, textCorrection }}>
    
    //console.log(width, height, step)
    const contentRect = document.querySelector("#content").getBoundingClientRect()
    const percent = contentRect.width / 448
    const finalWidth = width * percent
    const finalHeight = width * 1.3 * percent
    const finalTextCorrection = textCorrection * percent
    const finalFontSize = fontSize * percent
    //console.log("percent = ", percent)
    //console.log("finalWidth = ", finalWidth)
    //console.log("finalTextCorrection = ", finalTextCorrection)
    
    document.querySelectorAll(`#my-avatar-${step} .my-avatar-body-part,#my-avatar-${step} #my-avatar-eyes-image`).forEach(element => {
        // Set width to 200 for each element
        const el = element
        el.width = finalWidth
    })

    if(hasText){
        // Centramos el nombre de usuario
        const userName = document.getElementById("my-avatar-name-"+step)
        const rect = userName.getBoundingClientRect();
        //const x = finalWidth * .5 - rect.width * .5
        const y = finalHeight - (finalTextCorrection)

        //userName.style.left = `${x}px`
        userName.style.top = `${y}px`

        //console.log("username width " + rect.width + " step " + step)

        // change fontSize of userName based on fontSize param
        userName.style.fontSize = `${finalFontSize}px`
    }
   

</script>
<style>
    .user-name{
        position: absolute;
    }
    .my-avatar-image {
        position: absolute;
        top:0px;
        left:0px;
        z-index: 100;
    }

    .my-avatar-hide {
        opacity: 0;
    }

    .my-avatar-body-part {
        position: absolute;
        pointer-events: none;
    }

    .avatar-circle-mask {
        clip-path: circle(40%);
    }
</style>