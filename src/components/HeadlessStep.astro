---
import Header from './Header.astro';
import Footer from './Footer.astro';
interface Props {
	step: string,
	act?: string,
}

const { step, act } = Astro.props;

const notFirst = (step !== "0")
const stepNum = Number(step)


---

<div class=`step` id=`step-${step}`>
    <div class="step-content">
        <slot />
    </div>
    <div class="step-footer">
        <!--<Footer> -->
    </div>
</div>
<script define:vars={{ step }}>
    
  
    const footerHeight = 35
    const marginLateral= 0
    const rect = document.querySelector(".step").getBoundingClientRect()
    const stepWidth = rect.width

    // change .step-content height based on stepHeight
    document.querySelectorAll(".step-content").forEach(element => {
        let height = (window.innerHeight - footerHeight) // stepHeight
        height > 700? height = 700 : height
        //console.log("height = ", height)
        const width = (stepWidth - marginLateral - marginLateral)
        element.style.width = `${width}px`
        element.style.height = `${height}px`
        //element.innerHTML = `window.innerHeight = ${window.innerHeight}`
    });
</script >
<style>

    .step {
        opacity:0;
        display: grid;
        grid-template-areas: 
        'content'
        'footer';
        grid-template-rows:auto 35px;
    }

    .step-content{
        grid-area: content;
        /*width: 100%;*/
        /*max-height: 500px; /* Esto ha de cambiar de forma din√°mica */
        align-self: baseline;
    }

    .step-footer{
        grid-area: footer;
        width: 100%;
        height: 100%;
    }

	.button{
        

    }

    @media (max-width: 500px) {
        
    }
	
</style>